name: JSON Validation

run-name: ${{ github.actor }} triggered a check

on:
  pull_request:
    branches:
      - main

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - run: echo "ðŸŽ‰ The job was automatically triggered by a ${{ github.event_name }} event."
      
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get install jq

      - name: List changed JSON files
        id: list-files
        run: |
          # Get the list of changed JSON files in the pull request
          echo "FILES_CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep '\.json$')" >> $GITHUB_ENV
          echo "$FILES_CHANGED
        
      - name: Validate JSON
        run: |
          # Get the list of changed JSON files from the environment file
          json_files=$(echo "$FILES_CHANGED")

          # Loop through JSON files and validate each one
          for file in $json_files; do
            if ! jq -e '
              # Check if the file contains valid JSON
              try (. | fromjson | . != null) catch false as $valid_json |
              
              # Check for the "description" property (optional)
              .description? as $desc |
              
              # Check for the "socials" property (optional)
              .socials? as $socials |
              
              # Check if the "socials" property is an object with valid URLs
              ($socials == null or
                ($socials | objects | all(. as $value | ($value | strings | test("^https?://"))))) and
              
              # Check that there are no additional properties
              (keys - ["description", "socials"] | length == 0)
            ' "$file"; then
              echo "JSON validation failed for $file."
              exit 1
            else
              echo "JSON validation passed for $file."
            fi
          done
